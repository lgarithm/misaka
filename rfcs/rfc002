Resource Management
======

In C APIs, all struct T are declared using forward declaration.

typedef struct T T;

All APIs will take pointers of struct.


For each struct T, new_t and free_t must be defined.
new_t must return *T and free_t must accept *T.

extern T* new_t(...);
extern void del_t(T*);

For a pointer returned from new_t, it must be freed using del_t,
or delegate its ownership to another object.

For a struct T, make_t may be defined. The pointer returned from make_t
should be managed by GC and should not be freed.

We shall use std::unique_ptr to manage memory resource internally.
